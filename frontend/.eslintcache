[{"/home/user/Documents/projects/my-intranet/my-anki/frontend/src/index.tsx":"1","/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/random-card/card.tsx":"2","/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/random-card/answer.tsx":"3","/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/choose-deck/deck-button.tsx":"4","/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/random-card/api.ts":"5","/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/common/index.ts":"6","/home/user/Documents/projects/my-intranet/my-anki/frontend/src/utils/index.ts":"7","/home/user/Documents/projects/my-intranet/my-anki/frontend/src/hooks/index.ts":"8","/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/random-card/hooks.ts":"9","/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/random-card/index.tsx":"10","/home/user/Documents/projects/my-intranet/my-anki/frontend/src/utils/rand-stack.ts":"11","/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/random-card/anki-screen.tsx":"12","/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/choose-deck/index.tsx":"13","/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/select-grade/index.tsx":"14","/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/common/fence.tsx":"15","/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/finish-screen/index.tsx":"16","/home/user/Documents/projects/my-intranet/my-anki/frontend/src/constants.ts":"17"},{"size":187,"mtime":1612124912386,"results":"18","hashOfConfig":"19"},{"size":441,"mtime":1612124912386,"results":"20","hashOfConfig":"19"},{"size":1233,"mtime":1613987644582,"results":"21","hashOfConfig":"19"},{"size":646,"mtime":1612178267131,"results":"22","hashOfConfig":"19"},{"size":1328,"mtime":1613988128243,"results":"23","hashOfConfig":"19"},{"size":71,"mtime":1612124912382,"results":"24","hashOfConfig":"19"},{"size":65,"mtime":1612124912386,"results":"25","hashOfConfig":"19"},{"size":152,"mtime":1612124912386,"results":"26","hashOfConfig":"19"},{"size":3137,"mtime":1613992888801,"results":"27","hashOfConfig":"19"},{"size":1298,"mtime":1613988324104,"results":"28","hashOfConfig":"19"},{"size":769,"mtime":1613992888805,"results":"29","hashOfConfig":"19"},{"size":2607,"mtime":1613989196212,"results":"30","hashOfConfig":"19"},{"size":2196,"mtime":1612124912382,"results":"31","hashOfConfig":"19"},{"size":1122,"mtime":1613988751463,"results":"32","hashOfConfig":"19"},{"size":249,"mtime":1613985240099,"results":"33","hashOfConfig":"19"},{"size":658,"mtime":1613992888801,"results":"34","hashOfConfig":"19"},{"size":52,"mtime":1614629755459,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"ydb0mf",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/user/Documents/projects/my-intranet/my-anki/frontend/src/index.tsx",[],["75","76"],"/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/random-card/card.tsx",[],["77","78"],"/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/random-card/answer.tsx",["79"],"/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/choose-deck/deck-button.tsx",["80"],"import React from \"react\";\nimport { useHistory } from \"react-router\";\nimport styles from \"./deck-button.module.css\";\n\ninterface Props {\n    deckName: string;\n    title: string;\n}\n\nconst DeckButton: React.FC<Props> = ({ deckName, title }) => {\n    const history = useHistory();\n    \n    const onClick = React.useCallback(\n        () => {\n            history.push(\n                `/deck/${deckName}`\n            );\n        },\n        [deckName]\n    );\n    \n    return (\n        <div className={styles.wrapper}>\n            <button onClick={onClick}>\n                {title}\n            </button>\n        </div>\n    )\n}\n\nexport default DeckButton;\n","/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/random-card/api.ts",[],"/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/common/index.ts",[],["81","82"],"/home/user/Documents/projects/my-intranet/my-anki/frontend/src/utils/index.ts",[],"/home/user/Documents/projects/my-intranet/my-anki/frontend/src/hooks/index.ts",[],"/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/random-card/hooks.ts",["83"],"import { useState, useEffect, useCallback, useMemo } from \"react\";\nimport { RandStack } from \"../../utils\";\nimport { useForceUpdate } from \"../../hooks\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { fetchCardRefs, fetchCardSides } from \"./api\";\n\ninterface Card {\n    front: string;\n    back: string;\n}\n\ninterface CardInfo {\n    name: string;\n    content: Card;\n}\n\nexport const useCardsData = (deckName?: string) => {\n    const forceUpdate = useForceUpdate();\n    const [cardRefs, setCardRefs] = useState<RandStack<string>>();\n\n    useEffect(\n        () => {\n            if (deckName) {\n                fetchCardRefs(deckName).then(\n                    cardRefs => {\n                        const stack = new RandStack<string>(cardRefs);\n                        setCardRefs(stack);\n                    }\n                ).catch(err => console.error(err));\n            }\n        },\n        [deckName]\n    );\n\n    const takeCard = useCallback(\n        async (): Promise<CardInfo | undefined> => {\n            if (\n                (typeof cardRefs !== \"undefined\") &&\n                (typeof deckName !== \"undefined\")\n            ) {\n                const cardName = cardRefs.pop();\n\n                if (typeof cardName !== \"undefined\") {\n                    const cardSides = await fetchCardSides(deckName, cardName);\n                    forceUpdate();\n\n                    return { \n                        name: cardName,\n                        content: cardSides\n                     }\n                }\n            }\n        },\n        [deckName, cardRefs]\n    );\n\n    return { \n        takeCard,\n        hasNextCard: !!cardRefs?.length\n    };\n}\n\nexport const useCard = () => {\n    const match = useRouteMatch<{ name: string }>(\"/deck/:name\");\n    const deckName = useMemo(\n        () => {\n            return match?.params.name;\n        },\n        [match?.params]\n    );\n\n    const { takeCard, hasNextCard } = useCardsData(deckName);\n\n    const [pending, setPending] = useState(false);\n    const [front, setFront] = useState<string>();\n    const [back, setBack] = useState<string>();\n    const [cardName, setCardName] = useState<string>();\n    const [error, setError] = useState<Error>();\n\n    const fetchCard = useCallback(\n        async () => {\n            try {\n                setPending(true);\n\n                const info = await takeCard();\n\n                if (typeof info !== \"undefined\") {\n                    setCardName(info.name);\n                    setFront(info.content.front);\n                    setBack(info.content.back);\n                }\n            } catch (err) {\n                console.error(err);\n                setError(err);\n            } finally {\n                setPending(false);\n            }\n        },\n        [takeCard]\n    ) \n        \n    useEffect(\n        () => {\n            fetchCard();\n        },\n        [fetchCard]\n    );\n\n    const [answered, setAnswered] = useState(false);\n\n    return {\n        answered,\n        setAnswered,\n\n        fetchCard,\n\n        pending,\n        cardName,\n        deckName,\n        front,\n        back,\n        error,\n\n        hasNextCard\n    };\n}","/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/random-card/index.tsx",["84","85","86"],"/home/user/Documents/projects/my-intranet/my-anki/frontend/src/utils/rand-stack.ts",[],"/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/random-card/anki-screen.tsx",["87","88"],"/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/choose-deck/index.tsx",[],"/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/select-grade/index.tsx",[],"/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/common/fence.tsx",[],"/home/user/Documents/projects/my-intranet/my-anki/frontend/src/components/finish-screen/index.tsx",[],"/home/user/Documents/projects/my-intranet/my-anki/frontend/src/constants.ts",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"89","replacedBy":"93"},{"ruleId":"91","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":30,"column":9,"nodeType":"97","endLine":30,"endColumn":11,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":19,"column":9,"nodeType":"97","endLine":19,"endColumn":19,"suggestions":"100"},{"ruleId":"89","replacedBy":"101"},{"ruleId":"91","replacedBy":"102"},{"ruleId":"95","severity":1,"message":"103","line":54,"column":9,"nodeType":"97","endLine":54,"endColumn":29,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":12},{"ruleId":"105","severity":1,"message":"109","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":14},{"ruleId":"105","severity":1,"message":"110","line":6,"column":8,"nodeType":"107","messageId":"108","endLine":6,"endColumn":14},{"ruleId":"95","severity":1,"message":"111","line":36,"column":9,"nodeType":"97","endLine":36,"endColumn":61,"suggestions":"112"},{"ruleId":"95","severity":1,"message":"113","line":51,"column":9,"nodeType":"97","endLine":51,"endColumn":41,"suggestions":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],["115"],["116"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'refSetValue'. Either include it or remove the dependency array.","ArrayExpression",["117"],"React Hook React.useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["118"],["115"],["116"],"React Hook useCallback has a missing dependency: 'forceUpdate'. Either include it or remove the dependency array.",["119"],"@typescript-eslint/no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Answer' is defined but never used.","'styles' is defined but never used.","React Hook React.useCallback has missing dependencies: 'grade' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside React.useCallback.",["120"],"React Hook React.useCallback has missing dependencies: 'grade' and 'history'. Either include them or remove the dependency array.",["121"],"no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [refSetValue]",{"range":"132","text":"133"},"Update the dependencies array to be: [deckName, history]",{"range":"134","text":"135"},"Update the dependencies array to be: [cardRefs, deckName, forceUpdate]",{"range":"136","text":"137"},"Update the dependencies array to be: [props, grade]",{"range":"138","text":"139"},"Update the dependencies array to be: [grade, history, props.cardName, props.deckName]",{"range":"140","text":"141"},[788,790],"[refSetValue]",[433,443],"[deckName, history]",[1552,1572],"[cardRefs, deckName, forceUpdate]",[995,1047],"[props, grade]",[1421,1453],"[grade, history, props.cardName, props.deckName]"]